/* animation.css */

body {
  background-color: black;
}

.animation-container {
  position: relative;
  overflow: hidden;
  width: auto;
  height: 100vh;
  /* Set the container height to fill the viewport */
  background-color: rgb(0, 0, 0);
}

.animation-container img {
  height: 100vh;
  max-width: 100vw;
  object-fit: contain;
  margin: auto;
  position: relative;
  overflow: hidden;
  perspective: 23rem;
  transition: transform 0.4s ease-in-out;
  /* Add a smooth transition */
}

@keyframes parallaxAnimation {
  from {
    transform: perspective(1000px) translateZ(0);
  }

  to {
    transform: perspective(1000px) translateZ(-100px);
  }
}


@media only screen and (max-width: 500px) {
  .animation-container img {
    object-fit: cover;
    padding: 10%;
    border-radius: 80px;
    transition: padding 0.4s, border-radius 0.4s ease-in-out
  }

  .animation-container img:hover {
    padding: 0%;
    border-radius: 0px;
  }

  .top {
    transform: scale(0.95);
  }

}

.arrow {
  width: 100vw;
  height: 30%;
  position: absolute;
  z-index: 100;
  display: flex;
  justify-content: center;
  transition: width 0.2s ease-in-out, height 0.2s ease-in-out;
}

@media only screen and (max-height: 666px) {

  .arrow {
    justify-content: end;
  }

  .arrow.up::after,
  .arrow.down::after {
    left: 10% !important;
  }

  .arrow.up::before,
  .arrow.down::before {
    display: none;
  }

}

.arrow.up::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 25%;
  background: linear-gradient(to top, rgba(0, 0, 0, 0), rgb(0, 0, 0, 0.5));
}

.arrow.down::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 25%;
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgb(0, 0, 0, 0.5));
}

.arrow.up::after {
  left: 50%;
  filter: invert(1);
  content: '';
  align-items: center;
  position: absolute;
  width:5%;
  height: 50%;
  background: url("https://www.svgrepo.com/show/486225/down-arrow-backup-3.svg") center/contain no-repeat;
  transition: left 0.3s ease-out;
}

.arrow.down::after {
  left: 50%;
  filter: invert(1);
  content: '';
  position: absolute;
  width: 5%;
  height: 50%;
  background: url("https://www.svgrepo.com/show/486227/down-arrow-backup-2.svg") center/contain no-repeat;
  transition: left 0.3s ease-out;
}

.dot-navigation {
  position: fixed;
  top: 50%;
  left: 10px;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  z-index: 100;
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 5px;
}

.dot {
  width: 10px;
  height: 10px;
  border-radius: 100%;
  background-color: rgba(255, 255, 255, 1);
  margin-bottom: 5px;
  margin-top: 5px;
  margin-left: 2px;
  margin-right: 2px;
  cursor: pointer;

}

.dot.active {
  background-color: rgb(255, 0, 0);
  /* Active dot color */
}

.image-text {
  text-align: right;
  position: fixed;
  top: 73%;
  right: 0;
  transform: translateY(-50%);
  color: #fff;
  font-size: 20px;
  background-color: rgba(0, 0, 0, 0.5);
  overflow: hidden;
  white-space: nowrap;
  max-width: 80vw;
  padding: 10px;
  box-sizing: border-box;
}

.image-text h2,
.image-text p {
  margin: 0;
  overflow: hidden;
  text-overflow: ellipsis;
}


.image-stack {
  display: flex;
  flex-direction: column;
}

.image {
  position: absolute;
  width: 100%;
  opacity: 0;
  transition: opacity 0.3s, transform 0.5s ease-in-out;
}

.image img {
  width: 100%;
  transform: scale(1.05);
}

.image h2,
.image p {
  margin: 10px;
}

.bg-open-link {
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  background-color: rgba(0, 0, 0, 0.5);
  position: fixed;
  transform: translateY(-50%);
  top: 50%;
  width: 100%;
  z-index: 100;
  height: 0;
  opacity: 0;
  transition: height 0.5s, opacity 0.3s ease-out;
}

.bg-open-link a {
  font-size: 30px;
  color: #fff;
  text-decoration: none;
  pointer-events: auto;
}

.image:hover .bg-open-link {
  height: 15%;
  opacity: 1;
}


.top {
  opacity: 1;
  z-index: 99;
}

.card-container {
  /* border-radius: 15px 50px; */
  background-color: black !important;
}